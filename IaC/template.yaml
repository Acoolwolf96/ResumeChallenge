AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  my-resume

  Sample SAM Template for my-resume

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128



Resources:

  MyWebsite:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: cloudresumecv
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      AccessControl: Private 
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties: 
      OriginAccessControlConfig: 
          Name: !Sub '${MyWebsite}.s3.amazonaws.com'
          OriginAccessControlOriginType: s3
          SigningBehavior: always
          SigningProtocol: sigv4      


  MyDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig: 
        Aliases:
          - acoolwolf.cloud
          - www.acoolwolf.cloud       
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: cloudresumecv.s3.us-east-1.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: cloudresumecv.s3.us-east-1.amazonaws.com
            Id: cloudresumecv.s3.us-east-1.amazonaws.com
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !Ref OriginAccessControl
        Enabled: true
        DefaultRootObject: index.html 
        ViewerCertificate:
          AcmCertificateArn: !Ref MyCertificate
          SslSupportMethod: sni-only


  MyBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref MyWebsite
      PolicyDocument:
        Version: 2008-10-17
        Id: PolicyForCloudFrontServicePrincipal
        Statement:
          - Sid: 'AllowCloudFrontServicePrincipal'
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: 'arn:aws:s3:::cloudresumecv/*'
            Condition:
              StringEquals:
                'AWS:SourceArn': 'arn:aws:cloudfront::436398278264:distribution/EPK498PHSGERE'

  MyCertificate:
    Type: 'AWS::CertificateManager::Certificate'
    Properties: 
      DomainName: acoolwolf.cloud
      SubjectAlternativeNames:
        - '*.acoolwolf.cloud'
      DomainValidationOptions:
        - DomainName: acoolwolf.cloud
          HostedZoneId: !Ref HostedZone
      ValidationMethod: DNS

  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: acoolwolf.cloud
      HostedZoneConfig:
        Comment: AcoolWolf Cloud hosted zone
 
  MyDomainRecord:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: Z0066675BF5GYA21WF93
      RecordSets:
        - Name: acoolwolf.cloud.
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName        


 
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
